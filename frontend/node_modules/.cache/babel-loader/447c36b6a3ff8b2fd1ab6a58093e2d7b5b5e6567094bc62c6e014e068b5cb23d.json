{"ast":null,"code":"var _jsxFileName = \"/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/Flights.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getFlight } from \"../Utils/api\";\nimport \"../Styles/Flights.css\";\nimport { SyncLoader } from \"react-spinners\";\n\n// Segment interface outside of FlightData for reuse and clarity\n\n// FlightData interface referencing the Segment interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flights() {\n  _s();\n  const [flights, setFlights] = useState([]); // Store an array of flights\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getFlight().then(flightData => {\n      setFlights(flightData); // Store the array of flight objects\n    }).catch(error => {\n      console.error(\"Error fetching flight data:\", error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(SyncLoader, {\n        size: 25,\n        color: \"#082f59\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  if (!flights || flights.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flight data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Helper function to calculate stop duration\n  const calculateStopDuration = (arrivalTime, nextDepartureTime) => {\n    const arrival = new Date(arrivalTime).getTime();\n    const nextDeparture = new Date(nextDepartureTime).getTime();\n    const stopDurationMs = nextDeparture - arrival;\n\n    // Convert milliseconds to hours and minutes\n    const hours = Math.floor(stopDurationMs / (1000 * 60 * 60));\n    const minutes = Math.floor(stopDurationMs % (1000 * 60 * 60) / (1000 * 60));\n    return `${hours}h ${minutes}m`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flight-container\",\n    children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-times\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [new Date(flight.initialDepartureTime).toLocaleString(), \" -\", \" \", new Date(flight.finalArrivalTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-route\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [flight.departureAirportCode, \" - \", flight.arrivalAirportCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-airline\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Airline: \", flight.airlineCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), flight.operatingAirlineCode && flight.operatingAirlineCode !== flight.airlineCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-operating-airline\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Operating Airline: \", flight.operatingAirlineCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-duration\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Total Duration: \", flight.totalDuration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), flight.segments.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-stops\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Stop at:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), flight.segments.slice(0, -1).map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Stop at \", segment.arrivalAirportCode, \" for\", \" \", calculateStopDuration(segment.arrivalTime, flight.segments[index + 1].departureTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-prices\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-price\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Total Price: \", flight.totalPrice ? `$${flight.totalPrice}` : \"N/A\", \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-per-traveler\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Price per Traveler: \", flight.pricePerTraveler ? `$${flight.pricePerTraveler}` : \"N/A\", \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, flight.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Flights, \"kgvdTSvqytqr2Rwoq42+E9NaE2A=\");\n_c = Flights;\nvar _c;\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"names":["useState","useEffect","getFlight","SyncLoader","jsxDEV","_jsxDEV","Flights","_s","flights","setFlights","loading","setLoading","then","flightData","catch","error","console","finally","className","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","length","calculateStopDuration","arrivalTime","nextDepartureTime","arrival","Date","getTime","nextDeparture","stopDurationMs","hours","Math","floor","minutes","map","flight","initialDepartureTime","toLocaleString","finalArrivalTime","departureAirportCode","arrivalAirportCode","airlineCode","operatingAirlineCode","totalDuration","segments","slice","segment","index","departureTime","totalPrice","pricePerTraveler","id","_c","$RefreshReg$"],"sources":["/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/Flights.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getFlight } from \"../Utils/api\";\nimport \"../Styles/Flights.css\";\nimport { SyncLoader } from \"react-spinners\";\n\n// Segment interface outside of FlightData for reuse and clarity\ninterface Segment {\n  departureTime: string;\n  departureAirportCode: string;\n  arrivalTime: string;\n  arrivalAirportCode: string;\n  airlineCode: string;\n  flightNumber: string;\n  operatingAirlineCode: string;\n  aircraftType: string;\n}\n\n// FlightData interface referencing the Segment interface\ninterface FlightData {\n  id: number; // Unique flight offer ID\n  initialDepartureTime: string;\n  finalArrivalTime: string;\n  departureAirportCode: string;\n  arrivalAirportCode: string;\n  airlineCode: string;\n  operatingAirlineCode: string;\n  totalDuration: string;\n  totalPrice: number;\n  pricePerTraveler: number;\n  segments: Segment[]; // Array of flight segments\n}\n\nexport default function Flights() {\n  const [flights, setFlights] = useState<FlightData[]>([]); // Store an array of flights\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getFlight()\n      .then((flightData: FlightData[]) => {\n        setFlights(flightData); // Store the array of flight objects\n      })\n      .catch((error) => {\n        console.error(\"Error fetching flight data:\", error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <SyncLoader size={25} color={\"#082f59\"} loading={loading} />\n      </div>\n    );\n  }\n\n  if (!flights || flights.length === 0) {\n    return <div>No flight data available.</div>;\n  }\n\n  // Helper function to calculate stop duration\n  const calculateStopDuration = (arrivalTime: string, nextDepartureTime: string): string => {\n    const arrival = new Date(arrivalTime).getTime();\n    const nextDeparture = new Date(nextDepartureTime).getTime();\n    const stopDurationMs = nextDeparture - arrival;\n\n    // Convert milliseconds to hours and minutes\n    const hours = Math.floor(stopDurationMs / (1000 * 60 * 60));\n    const minutes = Math.floor((stopDurationMs % (1000 * 60 * 60)) / (1000 * 60));\n\n    return `${hours}h ${minutes}m`;\n  };\n\n  return (\n    <section className=\"flight-container\">\n      {flights.map((flight) => (\n        <div key={flight.id} className=\"flight-box\">\n          <div className=\"flight-details\">\n            {/* Display initial and final departure time */}\n            <div className=\"flight-times\">\n              <span>\n                {new Date(flight.initialDepartureTime).toLocaleString()} -{\" \"}\n                {new Date(flight.finalArrivalTime).toLocaleString()}\n              </span>\n            </div>\n\n            {/* Display departure and arrival airport (name + code) */}\n            <div className=\"flight-route\">\n              <span>\n                {flight.departureAirportCode} - {flight.arrivalAirportCode}\n              </span>\n            </div>\n\n            {/* Display airline name and code */}\n            <div className=\"flight-airline\">\n              <span>Airline: {flight.airlineCode}</span>\n            </div>\n\n            {/* Display operating airline name and code (only if different from the main airline) */}\n            {flight.operatingAirlineCode && flight.operatingAirlineCode !== flight.airlineCode && (\n              <div className=\"flight-operating-airline\">\n                <span>Operating Airline: {flight.operatingAirlineCode}</span>\n              </div>\n            )}\n\n            {/* Display total duration of the flight */}\n            <div className=\"flight-duration\">\n              <span>Total Duration: {flight.totalDuration}</span>\n            </div>\n\n            {/* Display stop information only (if there are stops) */}\n            {flight.segments.length > 1 && (\n              <div className=\"flight-stops\">\n                <h4>Stop at:</h4>\n                {flight.segments.slice(0, -1).map((segment, index) => (\n                  <div key={index}>\n                    <p>\n                      Stop at {segment.arrivalAirportCode} for{\" \"}\n                      {calculateStopDuration(\n                        segment.arrivalTime,\n                        flight.segments[index + 1].departureTime\n                      )}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Display total price and price per traveler */}\n            <div className=\"flight-prices\">\n              <div className=\"total-price\">\n                <span>Total Price: {flight.totalPrice ? `$${flight.totalPrice}` : \"N/A\"} USD</span>\n              </div>\n              <div className=\"price-per-traveler\">\n                <span>Price per Traveler: {flight.pricePerTraveler ? `$${flight.pricePerTraveler}` : \"N/A\"} USD</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/FlightDetail.tsx\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\n// Segment and FlightData interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightDetail = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const flight = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.flight; // Get flight data from state\n  const navigate = useNavigate();\n  if (!flight) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flight data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Flight Details for Flight ID: \", flight.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"From:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" \", flight.departureAirportCode, \" at\", \" \", new Date(flight.initialDepartureTime).toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"To:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \" \", flight.arrivalAirportCode, \" at\", \" \", new Date(flight.finalArrivalTime).toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), \" $\", flight.totalPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), flight.segments.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"segment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Segment \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Departure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \" \", segment.departureAirportCode, \" at\", \" \", new Date(segment.departureTime).toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Arrival:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), \" \", segment.arrivalAirportCode, \" at\", \" \", new Date(segment.arrivalTime).toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Airline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), \" \", segment.airlineCode, \", Flight Number:\", \" \", segment.flightNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Aircraft Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \" \", segment.aircraftType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetail, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = FlightDetail;\nexport default FlightDetail;\nvar _c;\n$RefreshReg$(_c, \"FlightDetail\");","map":{"version":3,"names":["useLocation","useNavigate","jsxDEV","_jsxDEV","FlightDetail","_s","_location$state","location","flight","state","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onClick","departureAirportCode","Date","initialDepartureTime","toLocaleTimeString","arrivalAirportCode","finalArrivalTime","totalPrice","segments","map","segment","index","departureTime","arrivalTime","airlineCode","flightNumber","aircraftType","_c","$RefreshReg$"],"sources":["/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/FlightDetail.tsx"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\n\n// Segment and FlightData interfaces\ninterface Segment {\n  departureTime: string;\n  departureAirportCode: string;\n  arrivalTime: string;\n  arrivalAirportCode: string;\n  airlineCode: string;\n  flightNumber: string;\n  operatingAirlineCode: string;\n  aircraftType: string;\n}\n\ninterface FlightData {\n  id: number;\n  initialDepartureTime: string;\n  finalArrivalTime: string;\n  departureAirportCode: string;\n  arrivalAirportCode: string;\n  airlineCode: string;\n  operatingAirlineCode: string;\n  totalDuration: string;\n  totalPrice: number;\n  pricePerTraveler: number;\n  segments: Segment[];\n}\n\nconst FlightDetail = () => {\n  const location = useLocation();\n  const flight: FlightData = location.state?.flight; // Get flight data from state\n  const navigate = useNavigate();\n\n  if (!flight) {\n    return <div>No flight data available.</div>;\n  }\n\n  return (\n    <div className=\"flight-detail\">\n      <h1>Flight Details for Flight ID: {flight.id}</h1>\n      <button onClick={() => navigate(-1)}>Go Back</button>\n\n      <p>\n        <strong>From:</strong> {flight.departureAirportCode} at{\" \"}\n        {new Date(flight.initialDepartureTime).toLocaleTimeString()}\n      </p>\n      <p>\n        <strong>To:</strong> {flight.arrivalAirportCode} at{\" \"}\n        {new Date(flight.finalArrivalTime).toLocaleTimeString()}\n      </p>\n      <p>\n        <strong>Total Price:</strong> ${flight.totalPrice}\n      </p>\n\n      {flight.segments.map((segment, index) => (\n        <div key={index} className=\"segment\">\n          <h3>Segment {index + 1}</h3>\n          <p>\n            <strong>Departure:</strong> {segment.departureAirportCode} at{\" \"}\n            {new Date(segment.departureTime).toLocaleTimeString()}\n          </p>\n          <p>\n            <strong>Arrival:</strong> {segment.arrivalAirportCode} at{\" \"}\n            {new Date(segment.arrivalTime).toLocaleTimeString()}\n          </p>\n          <p>\n            <strong>Airline:</strong> {segment.airlineCode}, Flight Number:{\" \"}\n            {segment.flightNumber}\n          </p>\n          <p>\n            <strong>Aircraft Type:</strong> {segment.aircraftType}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FlightDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
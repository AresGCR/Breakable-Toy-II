{"ast":null,"code":"var _jsxFileName = \"/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/Flights.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getFlight } from \"../Utils/api\";\nimport \"../Styles/Flights.css\";\nimport { SyncLoader } from \"react-spinners\";\n\n// Segment and FlightData interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flights() {\n  _s();\n  const [flights, setFlights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getFlight().then(flightData => {\n      setFlights(flightData); // Store the array of flight objects\n    }).catch(error => {\n      console.error(\"Error fetching flight data:\", error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(SyncLoader, {\n        size: 25,\n        color: \"#ffffff\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  if (!flights || flights.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flight data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flight-container\",\n    children: flights.map(flight => {\n      const segments = flight.segments;\n      let stop = null;\n\n      // Calculate stop information if there are multiple segments\n      if (segments.length > 1) {\n        const firstSegment = segments[0];\n        const secondSegment = segments[1];\n        const stopDurationMs = new Date(secondSegment.departureTime).getTime() - new Date(firstSegment.arrivalTime).getTime();\n        const stopDurationHours = Math.floor(stopDurationMs / (1000 * 60 * 60));\n        const stopDurationMinutes = Math.floor(stopDurationMs % (1000 * 60 * 60) / (1000 * 60));\n        stop = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stop-details\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Stop at \", firstSegment.arrivalAirportCode, \" for \", stopDurationHours, \"h \", stopDurationMinutes, \"m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [new Date(flight.initialDepartureTime).toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            }), \" \", \"-\", \" \", new Date(flight.finalArrivalTime).toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: flight.totalDuration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [flight.departureAirportCode, \" - \", flight.arrivalAirportCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), stop && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stop\",\n          children: stop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-price\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [flight.totalPrice !== null ? `$${flight.totalPrice} MXN` : \"N/A\", \" total\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-per-traveler\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [flight.pricePerTraveler !== null ? `$${flight.pricePerTraveler} MXN` : \"N/A\", \" per Traveler\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"airline-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: flight.airlineCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, flight.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Flights, \"Mwq71A2FyHtxBWsI3NxgY4K0KoU=\");\n_c = Flights;\nvar _c;\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"names":["useState","useEffect","getFlight","SyncLoader","jsxDEV","_jsxDEV","Flights","_s","flights","setFlights","loading","setLoading","then","flightData","catch","error","console","finally","className","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","flight","segments","stop","firstSegment","secondSegment","stopDurationMs","Date","departureTime","getTime","arrivalTime","stopDurationHours","Math","floor","stopDurationMinutes","arrivalAirportCode","initialDepartureTime","toLocaleTimeString","hour","minute","finalArrivalTime","totalDuration","departureAirportCode","totalPrice","pricePerTraveler","airlineCode","id","_c","$RefreshReg$"],"sources":["/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/Flights.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getFlight } from \"../Utils/api\";\nimport \"../Styles/Flights.css\";\nimport { SyncLoader } from \"react-spinners\";\n\n// Segment and FlightData interfaces\ninterface Segment {\n  departureTime: string;\n  departureAirportCode: string;\n  arrivalTime: string;\n  arrivalAirportCode: string;\n  airlineCode: string;\n  flightNumber: string;\n  operatingAirlineCode: string;\n  aircraftType: string;\n}\n\ninterface FlightData {\n  id: number;\n  initialDepartureTime: string;\n  finalArrivalTime: string;\n  departureAirportCode: string;\n  arrivalAirportCode: string;\n  airlineCode: string;\n  operatingAirlineCode: string;\n  totalDuration: string;\n  totalPrice: number;\n  pricePerTraveler: number;\n  segments: Segment[];\n}\n\nexport default function Flights() {\n  const [flights, setFlights] = useState<FlightData[] | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getFlight()\n      .then((flightData: FlightData[]) => {\n        setFlights(flightData); // Store the array of flight objects\n      })\n      .catch((error) => {\n        console.error(\"Error fetching flight data:\", error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <SyncLoader size={25} color={\"#ffffff\"} loading={loading} />\n      </div>\n    );\n  }\n\n  if (!flights || flights.length === 0) {\n    return <div>No flight data available.</div>;\n  }\n\n  return (\n    <section className=\"flight-container\">\n      {flights.map((flight) => {\n        const segments = flight.segments;\n        let stop = null;\n\n        // Calculate stop information if there are multiple segments\n        if (segments.length > 1) {\n          const firstSegment = segments[0];\n          const secondSegment = segments[1];\n          const stopDurationMs =\n            new Date(secondSegment.departureTime).getTime() - new Date(firstSegment.arrivalTime).getTime();\n          const stopDurationHours = Math.floor(stopDurationMs / (1000 * 60 * 60));\n          const stopDurationMinutes = Math.floor((stopDurationMs % (1000 * 60 * 60)) / (1000 * 60));\n\n          stop = (\n            <div className=\"stop-details\">\n              <strong>\n                Stop at {firstSegment.arrivalAirportCode} for {stopDurationHours}h {stopDurationMinutes}m\n              </strong>\n            </div>\n          );\n        }\n\n        return (\n          <div className=\"flight-box\" key={flight.id}>\n            <div className=\"flight-info\">\n              <span>\n                {new Date(flight.initialDepartureTime).toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })}{\" \"}\n                -{\" \"}\n                {new Date(flight.finalArrivalTime).toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })}\n              </span>\n              <span>{flight.totalDuration}</span>\n            </div>\n\n            <div className=\"route-info\">\n              <span>\n                {flight.departureAirportCode} - {flight.arrivalAirportCode}\n              </span>\n            </div>\n\n            {stop && <div className=\"stop\">{stop}</div>}\n\n            <div className=\"price-info\">\n              <div className=\"total-price\">\n                <span>{flight.totalPrice !== null ? `$${flight.totalPrice} MXN` : \"N/A\"} total</span>\n              </div>\n              <div className=\"price-per-traveler\">\n                <span>{flight.pricePerTraveler !== null ? `$${flight.pricePerTraveler} MXN` : \"N/A\"} per Traveler</span>\n              </div>\n            </div>\n\n            <div className=\"airline-info\">\n              <span>{flight.airlineCode}</span>\n            </div>\n          </div>\n        );\n      })}\n    </section>\n  );\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
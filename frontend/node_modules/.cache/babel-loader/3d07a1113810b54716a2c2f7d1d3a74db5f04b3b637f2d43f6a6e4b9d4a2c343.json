{"ast":null,"code":"var _jsxFileName = \"/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/Flights.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getFlight } from \"../Utils/api\";\nimport \"../Styles/Flights.css\";\nimport { SyncLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flights() {\n  _s();\n  const [flight, setFlight] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getFlight().then(flightData => {\n      setFlight(flightData);\n    }).catch(error => {\n      console.error(\"Error fetching flight data:\", error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(SyncLoader, {\n        size: 25,\n        color: \"#082f59\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (!flight) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flight data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flight-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [flight.airlineName, \" (\", flight.airlineCode, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), flight.operatingAirlineName && flight.operatingAirlineName !== flight.airlineName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Operating Airline: \", flight.operatingAirlineName, \" (\", flight.operatingAirlineCode, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Departure: \", flight.departureAirportName, \" (\", flight.departureAirportCode, \") at \", flight.initialDepartureDateTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Arrival: \", flight.arrivalAirportName, \" (\", flight.arrivalAirportCode, \") at \", flight.finalArrivalDateTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Duration: \", flight.totalFlightDuration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), flight.segments && flight.segments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Segments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), flight.segments.map((segment, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [segment.departureAirportCode, \" to \", segment.arrivalAirportCode, \" \", \"- Flight: \", segment.flightNumber, \", Aircraft:\", \" \", segment.aircraftType]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: \", flight.totalPrice || \"N/A\", \" USD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price per Traveler: \", flight.pricePerTraveler || \"N/A\", \" USD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Flights, \"pmnz+iCn0L8v4G6mPqehfYtpX3k=\");\n_c = Flights;\nvar _c;\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"names":["useState","useEffect","getFlight","SyncLoader","jsxDEV","_jsxDEV","Flights","_s","flight","setFlight","loading","setLoading","then","flightData","catch","error","console","finally","className","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","airlineName","airlineCode","operatingAirlineName","operatingAirlineCode","departureAirportName","departureAirportCode","initialDepartureDateTime","arrivalAirportName","arrivalAirportCode","finalArrivalDateTime","totalFlightDuration","segments","length","map","segment","index","flightNumber","aircraftType","totalPrice","pricePerTraveler","_c","$RefreshReg$"],"sources":["/Users/ares.castros/Documents/Breakable Toy II/frontend/src/Components/Flights.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getFlight } from \"../Utils/api\";\nimport \"../Styles/Flights.css\";\nimport { SyncLoader } from \"react-spinners\";\n\ninterface FlightData {\n  flightId: string;\n  initialDepartureDateTime: string;\n  finalArrivalDateTime: string;\n  departureAirportName: string;\n  departureAirportCode: string;\n  arrivalAirportName: string;\n  arrivalAirportCode: string;\n  airlineName: string;\n  airlineCode: string;\n  operatingAirlineName?: string; // Optional if different from the main airline\n  operatingAirlineCode?: string; // Optional if different from the main airline\n  totalFlightDuration: string;\n  stops?: Array<{\n    airportName: string;\n    airportCode: string;\n    layoverTime: string;\n  }>;\n  totalPrice: number | null;\n  pricePerTraveler: number | null;\n  segments: Array<{\n    departureTime: string;\n    departureAirportCode: string;\n    arrivalTime: string;\n    arrivalAirportCode: string;\n    airlineCode: string;\n    flightNumber: string;\n    operatingAirlineCode: string;\n    aircraftType: string;\n  }>;\n}\n\n\nexport default function Flights() {\n  const [flight, setFlight] = useState<FlightData | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getFlight()\n      .then((flightData: FlightData) => {\n        setFlight(flightData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching flight data:\", error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <SyncLoader size={25} color={\"#082f59\"} loading={loading} />\n      </div>\n    );\n  }\n\n  if (!flight) {\n    return <div>No flight data available.</div>;\n  }\n\n  return (\n    <section className=\"flight-container\">\n      <div className=\"flight-box\">\n        <h3>\n          {flight.airlineName} ({flight.airlineCode})\n        </h3>\n        {flight.operatingAirlineName &&\n          flight.operatingAirlineName !== flight.airlineName && (\n            <p>\n              Operating Airline: {flight.operatingAirlineName} (\n              {flight.operatingAirlineCode})\n            </p>\n          )}\n        <p>\n          Departure: {flight.departureAirportName} (\n          {flight.departureAirportCode}) at {flight.initialDepartureDateTime}\n        </p>\n        <p>\n          Arrival: {flight.arrivalAirportName} (\n          {flight.arrivalAirportCode}) at {flight.finalArrivalDateTime}\n        </p>\n        <p>Total Duration: {flight.totalFlightDuration}</p>\n        {flight.segments && flight.segments.length > 0 && (\n          <div>\n            <h4>Segments:</h4>\n            {flight.segments.map((segment, index) => (\n              <p key={index}>\n                {segment.departureAirportCode} to {segment.arrivalAirportCode}{\" \"}\n                - Flight: {segment.flightNumber}, Aircraft:{\" \"}\n                {segment.aircraftType}\n              </p>\n            ))}\n          </div>\n        )}\n        <p>Total Price: {flight.totalPrice || \"N/A\"} USD</p>\n        <p>Price per Traveler: {flight.pricePerTraveler || \"N/A\"} USD</p>\n      </div>\n    </section>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}